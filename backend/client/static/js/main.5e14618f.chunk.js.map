{"version":3,"sources":["redux/redusers/categories.js","redux/redusers/words.js","redux/redusers/user.js","redux/redusers/index.js","redux/store.js","utils/api/words.js","utils/api/categories.js","utils/api/user.js","redux/actions/categories.js","redux/actions/words.js","redux/actions/user.js","components/NavMenu/index.jsx","components/DataTable/EditableCell/index.jsx","components/DataTable/EditableRow/index.jsx","components/DataTable/index.jsx","components/Categories/index.jsx","components/Words/index.jsx","components/Button/index.jsx","components/Learn/index.jsx","components/Forms/FormItem/index.jsx","components/Forms/index.jsx","components/DataTableControlPanel/index.jsx","pages/Home/index.jsx","pages/Registration/index.jsx","utils/helpers/openNotification.js","pages/Auth/index.jsx","App.js","index.js"],"names":["initialState","items","isLoaded","excludeItems","state","selectedCategories","filter","item","suitable","forEach","forDelete","_id","selectedWords","data","isAuth","window","localStorage","token","rootReducer","combineReducers","categories","action","type","title","payload","words","category","engWord","rusWord","key","user","store","createStore","composeWithDevTools","applyMiddleware","thunk","axios","defaults","headers","common","wordsApi","getAllByUserId","id","get","createWord","userId","attributes","Object","keys","attr","post","author_id","deleteWord","delete","editWord","getWordById","categoriesApi","createCategory","deleteCategory","editCagegory","userApi","createUser","user_name","email","password","loginUser","getUser","getMe","actions","setCategories","deleteCategories","ids","editCategory","setIsLoading","bool","fetchAddCategories","dispatch","then","addCategory","fetchDeleteCategory","fetchEditCategory","fetchCategories","catch","addWord","setWords","deleteWords","fetchWords","fetchAddWord","fetchDeleteWord","fetchEditWord","setUserData","fetchUserData","error","console","log","logout","fetchUserLogin","postData","accessToken","message","Header","Layout","NavMenu","useDispatch","useState","location","pathname","includes","selectedMenuItem","setSelectedMenuItem","className","to","onClick","theme","mode","selectedKeys","onSelect","e","Item","userActions","EditableCell","props","input","children","record","dataIndex","checkvalue","restProps","isCorrect","setIsCorrect","setValue","childNode","classnames","greenBorder","redBorder","onChange","target","value","EditableRow","DataTable","columns","selectedItems","setSelectedItems","isOpenItems","components","body","row","cell","newcolumns","map","col","onCell","bordered","rowKey","rowSelection","selectedRowKeys","dataSource","pagination","defaultPageSize","Content","Categories","setSelectedCategories","titleInForm","setTitleInForm","useEffect","categoriesActions","useSelector","formFields","info","valueInForm","onChangeValue","focus","onDelete","onAdd","onEdit","Words","setSelectedWords","rusWordValueInForm","setRusWordValueInForm","engWordValueInForm","setEngWordValueInForm","categoryInForm","setCategoryInForm","isOpenItemsRus","setIsOpenItemsRus","isOpenItemsEng","setIsOpenItemsEng","wordsActions","disabled","name","toLocaleLowerCase","width","v","categoryInfo","category_id","getValue","inputKey","field","Button","icon","Option","Select","Learn","label","initialvalues","showSearch","style","placeholder","optionFilterProp","filterOption","option","toLowerCase","indexOf","FormItem","lable","defaultValue","autoFocus","Forms","overlayHidden","setOverlayHidden","formTypeInfo","index","update","DataTableControlPanel","formType","setFormType","overlay_hide","PlusCircleOutlined","length","EditOutlined","element","DeleteOutlined","Home","exact","path","Registration","userName","setUserName","setEmail","setPassword","repeatPassword","setRepeatPassword","Password","a","openNotification","description","notification","Auth","setTimeout","App","render","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5e14618f.chunk.js","sourcesContent":["const initialState = {\r\n    items: [\r\n        // { _id: 1, title: \"Фразовые глаголы\", key: 1 },\r\n        // { _id: 2, title: \"Новые\", key: 2 },\r\n    ],\r\n    isLoaded: false,\r\n};\r\n\r\nconst excludeItems = (state, selectedCategories) => {\r\n    return state.items.filter((item) => {\r\n        let suitable = true;\r\n        selectedCategories.forEach((forDelete) => {\r\n            if (item._id === forDelete) {\r\n                suitable = false;\r\n            }\r\n        });\r\n        return suitable;\r\n    });\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_CATEGORY\":\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    {\r\n                        title: action.payload.title,\r\n                        _id: action.payload._id,\r\n                    },\r\n                ],\r\n            };\r\n        case \"DELETE_CATEGORIES\":\r\n            return {\r\n                ...state,\r\n                items: excludeItems(state, action.payload),\r\n            };\r\n        case \"EDIT_CATEGORY\":\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...excludeItems(state, action.payload.selectedCategories),\r\n                    {\r\n                        _id: action.payload.selectedCategories[0],\r\n                        title: action.payload.item.title,\r\n                    },\r\n                ],\r\n            };\r\n        case \"SET_CATEGORIES\":\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoaded: false,\r\n            };\r\n        case \"SET_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    items: [\r\n        // { _id: 1, engWord: \"age\", rusWord: \"возраст\", key: 1, category: 1 },\r\n        // { _id: 2, engWord: \"figure out\", rusWord: \"понимать\", key: 2, category: 1 },\r\n    ],\r\n    isLoaded: false,\r\n};\r\n\r\nconst excludeItems = (state, selectedWords) => {\r\n    return state.items.filter((item) => {\r\n        let suitable = true;\r\n        selectedWords.forEach((forDelete) => {\r\n            if (item._id === forDelete) {\r\n                suitable = false;\r\n            }\r\n        });\r\n        return suitable;\r\n    });\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_WORD\":\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    {\r\n                        _id: action.payload._id,\r\n                        category: action.payload.category,\r\n                        engWord: action.payload.engWord,\r\n                        rusWord: action.payload.rusWord,\r\n                    },\r\n                ],\r\n            };\r\n        case \"DELETE_WORDS\":\r\n            return {\r\n                ...state,\r\n                items: excludeItems(state, action.payload),\r\n            };\r\n        case \"EDIT_WORD\":\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...excludeItems(state, action.payload.selectedWords),\r\n                    {\r\n                        _id: action.payload.selectedWords[0],\r\n                        key: action.payload.selectedWords[0],\r\n                        category: action.payload.item.category,\r\n                        engWord: action.payload.item.engWord,\r\n                        rusWord: action.payload.item.rusWord,\r\n                    },\r\n                ],\r\n            };\r\n        case \"SET_WORDS\":\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isLoaded: false,\r\n            };\r\n        case \"SET_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {\r\n    data: null,\r\n    isAuth: !!window.localStorage.token,\r\n    token: window.localStorage.token,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"USER:SET_DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token,\r\n            };\r\n        case \"USER:LOGOUT\":\r\n            return {\r\n                data: null,\r\n                isAuth: false,\r\n                token: \"\",\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport categories from \"./categories\";\r\nimport words from \"./words\";\r\nimport user from \"./user\";\r\n\r\nconst rootReducer = combineReducers({ categories, words, user });\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./redusers\";\r\n\r\nlet store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token;\r\n\r\nconst wordsApi = {\r\n\r\n    getAllByUserId: (id) => {\r\n        return axios.get(\"/word/\" + id);\r\n    },\r\n    createWord: (item, userId) => {\r\n        const attributes = Object.keys(item);\r\n        const data = {};\r\n        attributes.forEach((attr) => {\r\n            data[attr] = item[attr];\r\n        });\r\n        return axios.post(\"/word/\", {\r\n            ...data,\r\n            author_id: userId,\r\n        });\r\n    },\r\n    deleteWord: (id) => {\r\n        return axios.delete(\"/word/\" + id);\r\n    },\r\n    editWord: (item) => {\r\n        return axios.post(\"/word/update/\" + item._id, {\r\n            ...item,\r\n        });\r\n    },\r\n    getWordById: (id) => {\r\n        return axios.get(\"/word/index/\" + id);\r\n    },\r\n};\r\nexport default wordsApi;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token;\r\n\r\nconst categoriesApi = {\r\n    getAllByUserId: (id) => {\r\n        return axios.get(\"/category/\" + id);\r\n    },\r\n    createCategory: ({ title }, userId) => {\r\n        return axios.post(\"/category/\", {\r\n            title: title,\r\n            author_id: userId,\r\n        });\r\n    },\r\n    deleteCategory: (id) => {\r\n        return axios.delete(\"/category/\" + id);\r\n    },\r\n    editCagegory: (item) => {\r\n        return axios.post(\"/category/update/\" + item._id, {\r\n            ...item,\r\n        });\r\n    },\r\n};\r\nexport default categoriesApi;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token;\r\n\r\nconst userApi = {\r\n    createUser: (data) => {\r\n        return axios.post(\"/users/\", {\r\n            user_name: data.user_name,\r\n            email: data.email,\r\n            password: data.password,\r\n        });\r\n    },\r\n    loginUser: (data) =>\r\n        axios.post(\"/users/login/\", {\r\n            email: data.email,\r\n            password: data.password,\r\n        }),\r\n    getUser: (id) => {\r\n        return axios.get(\"/users/\" + id);\r\n    },\r\n    getMe: () => {\r\n        return axios.get(\"/users/me\", { headers: { token: window.localStorage.token } });\r\n    },\r\n};\r\nexport default userApi;\r\n","import { categoriesApi } from \"../../utils/api\";\r\n\r\nconst actions = {\r\n    setCategories: (items) => ({\r\n        type: \"SET_CATEGORIES\",\r\n        payload: items,\r\n    }),\r\n    deleteCategories: (ids) => ({\r\n        type: \"DELETE_CATEGORIES\",\r\n        payload: ids,\r\n    }),\r\n    editCategory: (item, selectedCategories) => {\r\n        return {\r\n            type: \"EDIT_CATEGORY\",\r\n            payload: { item, selectedCategories },\r\n        };\r\n    },\r\n    setIsLoading: (bool) => ({\r\n        type: \"SET_IS_LOADING\",\r\n        payload: bool,\r\n    }),\r\n    fetchAddCategories: (item, userId) => (dispatch) => {\r\n        categoriesApi.createCategory(item, userId).then(({ data }) => {\r\n            dispatch(actions.addCategory(data));\r\n        });\r\n    },\r\n    fetchDeleteCategory: (ids) => (dispatch) => {\r\n        ids.forEach((id) => {\r\n            categoriesApi.deleteCategory(id).then(() => {\r\n                dispatch(actions.deleteCategories([id]));\r\n            });\r\n        });\r\n    },\r\n    fetchEditCategory: (item, selectedCategories) => (dispatch) => {\r\n        categoriesApi.editCagegory(item).then(() => {\r\n            dispatch(actions.editCategory(item, selectedCategories));\r\n        });\r\n    },\r\n    fetchCategories: (userId) => (dispatch) => {\r\n        dispatch(actions.setIsLoading(true));\r\n        categoriesApi\r\n            .getAllByUserId(userId)\r\n            .then(({ data }) => {\r\n                dispatch(actions.setCategories(data));\r\n            })\r\n            .catch(() => {\r\n                dispatch(actions.setIsLoading(false));\r\n            });\r\n    },\r\n\r\n    addCategory: (item) => ({\r\n        type: \"ADD_CATEGORY\",\r\n        payload: item,\r\n    }),\r\n};\r\n\r\nexport default actions;\r\n","import { wordsApi } from \"../../utils/api\";\r\n\r\nconst actions = {\r\n    addWord: (item) => ({\r\n        type: \"ADD_WORD\",\r\n        payload: item,\r\n    }),\r\n    setWords: (items) => ({\r\n        type: \"SET_WORDS\",\r\n        payload: items,\r\n    }),\r\n    deleteWords: (ids) => ({\r\n        type: \"DELETE_WORDS\",\r\n        payload: ids,\r\n    }),\r\n    editWord: (item, selectedWords) => {\r\n        return {\r\n            type: \"EDIT_WORD\",\r\n            payload: { item, selectedWords },\r\n        };\r\n    },\r\n\r\n    setIsLoading: (bool) => ({\r\n        type: \"SET_IS_LOADING\",\r\n        payload: bool,\r\n    }),\r\n\r\n    fetchWords: (userId) => (dispatch) => {\r\n        dispatch(actions.setIsLoading(true));\r\n        wordsApi\r\n            .getAllByUserId(userId)\r\n            .then(({ data }) => {\r\n                dispatch(actions.setWords(data));\r\n            })\r\n            .catch(() => {\r\n                dispatch(actions.setIsLoading(false));\r\n            });\r\n    },\r\n    fetchAddWord: (item, userId) => (dispatch) => {\r\n        wordsApi.createWord(item, userId).then(({ data }) => {\r\n            wordsApi.getWordById(data._id).then(({ data }) => {\r\n                dispatch(actions.addWord(data));\r\n            });\r\n        });\r\n    },\r\n    fetchDeleteWord: (ids) => (dispatch) => {\r\n        ids.forEach((id) => {\r\n            wordsApi.deleteWord(id).then(() => {\r\n                dispatch(actions.deleteWords([id]));\r\n            });\r\n        });\r\n    },\r\n    fetchEditWord: (item, selectedWords) => (dispatch) => {\r\n        wordsApi.editWord(item).then(({ data }) => {\r\n            wordsApi.getWordById(data._id).then(({ data }) => {\r\n                dispatch(actions.editWord(data, selectedWords));\r\n            });\r\n        });\r\n    },\r\n};\r\n\r\nexport default actions;\r\n","import { userApi } from \"../../utils/api\";\r\n\r\nconst actions = {\r\n    setUserData: (data) => ({\r\n        type: \"USER:SET_DATA\",\r\n        payload: data,\r\n    }),\r\n\r\n    fetchUserData: () => (dispatch) => {\r\n        userApi\r\n            .getMe()\r\n            .then(({ data }) => {\r\n                dispatch(actions.setUserData(data));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    },\r\n\r\n    logout: () => ({\r\n        type: \"USER:LOGOUT\",\r\n    }),\r\n\r\n    fetchUserLogin: (postData) => (dispatch) => {\r\n        return userApi\r\n            .loginUser(postData)\r\n            .then(({ data }) => {\r\n                const { accessToken } = data;\r\n                if (data.message === \"Success\") {\r\n                    window.localStorage[\"token\"] = accessToken;\r\n                    dispatch(actions.fetchUserData());\r\n                }\r\n\r\n                return data;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    },\r\n};\r\n\r\nexport default actions;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Menu, Layout } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { userActions } from \"../../redux/actions\";\r\n\r\nimport \"./NavMenu.scss\";\r\n\r\nconst { Header } = Layout;\r\n\r\nfunction NavMenu() {\r\n    const dispatch = useDispatch();\r\n    const [selectedMenuItem, setSelectedMenuItem] = useState(\r\n        window.location.pathname.includes(\"categories\")\r\n            ? [\"2\"]\r\n            : window.location.pathname.includes(\"learn\")\r\n            ? [\"3\"]\r\n            : [\"1\"]\r\n    );\r\n\r\n    return (\r\n        <Header className=\"header\">\r\n            <div className=\"header__logo-menu\">\r\n                <div>\r\n                    <Link\r\n                        className=\"header__logo\"\r\n                        to=\"/\"\r\n                        onClick={() => {\r\n                            setSelectedMenuItem([\"1\"]);\r\n                        }}\r\n                    >\r\n                        Learn ENG\r\n                    </Link>\r\n                </div>\r\n                <Menu\r\n                    className=\"header__menu\"\r\n                    theme=\"dark\"\r\n                    mode=\"horizontal\"\r\n                    selectedKeys={selectedMenuItem}\r\n                    onSelect={(e) => {\r\n                        setSelectedMenuItem([e.key]);\r\n                    }}\r\n                >\r\n                    <Menu.Item key=\"1\">\r\n                        <Link to=\"/words\">Слова</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Link to=\"/categories\">Категории</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\">\r\n                        <Link to=\"/learn\">Учить слова</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </div>\r\n            <div>\r\n                <div\r\n                    className=\"header__logout\"\r\n                    onClick={() => {\r\n                        window.localStorage.token = \"\";\r\n                        dispatch(userActions.logout());\r\n                    }}\r\n                >\r\n                    Выйти\r\n                </div>\r\n            </div>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default NavMenu;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Input } from \"antd\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"./EditableCell.scss\";\r\n\r\nconst EditableCell = (props) => {\r\n    let { title, input, children, dataIndex, record, checkvalue, ...restProps } = props;\r\n    const [isCorrect, setIsCorrect] = useState(0);\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    let childNode = children;\r\n\r\n\r\n\r\n    if (input) {\r\n        childNode = (\r\n            <div>\r\n                <Input\r\n                    className={classnames({\r\n                        greenBorder: isCorrect == 1,\r\n                        redBorder: isCorrect == -1,\r\n                    })}\r\n                    onChange={(e) => {\r\n                        checkvalue(e, record, setIsCorrect);\r\n                        setValue(e.target.value)\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nexport default EditableCell;\r\n","import React from \"react\";\r\n\r\nconst EditableRow = (props) => {\r\n    return <tr {...props} />;\r\n};\r\n\r\nexport default EditableRow;\r\n","import React from \"react\";\r\nimport { Table, Input } from \"antd\";\r\n\r\nimport EditableCell from \"./EditableCell\";\r\nimport EditableRow from \"./EditableRow\";\r\n\r\nimport \"./DataTable.scss\";\r\n\r\nconst DataTable = ({ columns, data, selectedItems, setSelectedItems, isOpenItems }) => {\r\n    const components = {\r\n        body: {\r\n            row: EditableRow,\r\n            cell: EditableCell,\r\n        },\r\n    };\r\n    const newcolumns = columns.map((col) => {\r\n        if (!col.input) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => {\r\n                return {\r\n                    record,\r\n                    input: col.input,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    checkvalue: col.checkvalue,\r\n                };\r\n            },\r\n        };\r\n    });\r\n    return (\r\n        <Table\r\n            components={isOpenItems ? components : false}\r\n            bordered\r\n            className=\"content\"\r\n            rowKey=\"_id\"\r\n            rowSelection={{\r\n                selectedRowKeys: selectedItems,\r\n                type: \"checkbox\",\r\n                onChange: (selectedRowKeys) => {\r\n                    setSelectedItems(selectedRowKeys);\r\n                },\r\n            }}\r\n            columns={newcolumns}\r\n            dataSource={data}\r\n            pagination={{\r\n                defaultPageSize: 20,\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { DataTable, DataTableControlPanel } from \"../\";\r\nimport { categoriesActions } from \"../../redux/actions\";\r\n\r\nimport \"./Categories.scss\";\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: \"title\",\r\n        key: \"title\",\r\n    },\r\n];\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Categories = () => {\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n    const [titleInForm, setTitleInForm] = useState(\"\");\r\n    useEffect(() => {\r\n        dispatch(categoriesActions.fetchCategories(user._id));\r\n    }, []);\r\n\r\n    const categories = useSelector(({ categories }) => {\r\n        return categories.items;\r\n    });\r\n    const user = useSelector(({ user }) => {\r\n        return user.data;\r\n    });\r\n\r\n    const formFields = [\r\n        {\r\n            title: \"Название\",\r\n            dataIndex: \"title\",\r\n            key: \"title\",\r\n            info: { type: \"input\" },\r\n            valueInForm: titleInForm,\r\n            onChangeValue: (e) => {\r\n                if (e.target) {\r\n                    setTitleInForm(e.target.value);\r\n                } else {\r\n                    setTitleInForm(e);\r\n                }\r\n            },\r\n            focus: true,\r\n        },\r\n    ];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addCategory = () => {\r\n        dispatch(\r\n            categoriesActions.fetchAddCategories(\r\n                {\r\n                    title: formFields.filter((item) => item.key == \"title\")[0]\r\n                        .valueInForm,\r\n                },\r\n                user._id\r\n            )\r\n        );\r\n    };\r\n\r\n    const editCategory = () => {\r\n        dispatch(\r\n            categoriesActions.fetchEditCategory(\r\n                {\r\n                    title: formFields.filter((item) => item.key == \"title\")[0]\r\n                        .valueInForm,\r\n                    _id: selectedCategories[0],\r\n                },\r\n                selectedCategories\r\n            )\r\n        );\r\n    };\r\n\r\n    const deleteCategories = () => {\r\n        dispatch(categoriesActions.fetchDeleteCategory(selectedCategories));\r\n    };\r\n\r\n    return (\r\n        <Content>\r\n            <DataTableControlPanel\r\n                onDelete={deleteCategories}\r\n                items={categories}\r\n                onAdd={addCategory}\r\n                onEdit={editCategory}\r\n                selectedItems={selectedCategories}\r\n                formFields={formFields}\r\n            />\r\n            <DataTable\r\n                columns={columns}\r\n                data={categories}\r\n                selectedItems={selectedCategories}\r\n                setSelectedItems={setSelectedCategories}\r\n            />\r\n        </Content>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { DataTable, DataTableControlPanel, Button } from \"../\";\r\nimport { wordsActions, categoriesActions, userActions } from \"../../redux/actions\";\r\n\r\nimport \"./Words.scss\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Words = () => {\r\n    const [selectedWords, setSelectedWords] = useState([]);\r\n    const [rusWordValueInForm, setRusWordValueInForm] = useState(\"\");\r\n    const [engWordValueInForm, setEngWordValueInForm] = useState(\"\");\r\n    const [categoryInForm, setCategoryInForm] = useState(\"\");\r\n    const [isOpenItemsRus, setIsOpenItemsRus] = useState(false);\r\n    const [isOpenItemsEng, setIsOpenItemsEng] = useState(false);\r\n    const user = useSelector(({ user }) => {\r\n        return user.data;\r\n    });\r\n    useEffect(() => {\r\n        user && dispatch(wordsActions.fetchWords(user._id));\r\n        user && dispatch(categoriesActions.fetchCategories(user._id));\r\n    }, [user]);\r\n\r\n    const words = useSelector(({ words }) => {\r\n        return words.items;\r\n    });\r\n    const categories = useSelector(({ categories }) => {\r\n        return categories.items;\r\n    });\r\n\r\n    const columns = [\r\n        {\r\n            title: () => {\r\n                return (\r\n                    <div className=\"with-button\">\r\n                        Слово на русском{\" \"}\r\n                        <Button\r\n                            disabled={isOpenItemsEng}\r\n                            name={!isOpenItemsRus ? \"Скрыть\" : \"Открыть\"}\r\n                            onClick={() => {\r\n                                setIsOpenItemsRus(!isOpenItemsRus);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                );\r\n            },\r\n\r\n            dataIndex: \"rusWord\",\r\n            key: \"rusWord\",\r\n            input: isOpenItemsRus,\r\n            checkvalue: (e, record, setIsCorrect) => {\r\n                if (e.target.value === \"\") {\r\n                    setIsCorrect(0);\r\n                } else {\r\n                    if (\r\n                        e.target.value.toLocaleLowerCase() ===\r\n                        record.rusWord.toLocaleLowerCase()\r\n                    ) {\r\n                        setIsCorrect(1);\r\n                    } else {\r\n                        setIsCorrect(-1);\r\n                    }\r\n                }\r\n            },\r\n            width: \"30%\",\r\n        },\r\n        {\r\n            title: () => {\r\n                return (\r\n                    <div className=\"with-button\">\r\n                        Слово на английском{\" \"}\r\n                        <Button\r\n                            disabled={isOpenItemsRus}\r\n                            name={!isOpenItemsEng ? \"Скрыть\" : \"Открыть\"}\r\n                            onClick={() => {\r\n                                setIsOpenItemsEng(!isOpenItemsEng);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                );\r\n            },\r\n            dataIndex: \"engWord\",\r\n            key: \"engWord\",\r\n            input: isOpenItemsEng,\r\n            checkvalue: (e, record, setIsCorrect) => {\r\n                if (e.target.value === \"\") {\r\n                    setIsCorrect(0);\r\n                } else {\r\n                    if (\r\n                        e.target.value.toLocaleLowerCase() ===\r\n                        record.engWord.toLocaleLowerCase()\r\n                    ) {\r\n                        setIsCorrect(1);\r\n                    } else {\r\n                        setIsCorrect(-1);\r\n                    }\r\n                }\r\n            },\r\n            width: \"30%\",\r\n        },\r\n        {\r\n            title: \"Категория\",\r\n            dataIndex: [\"category\", \"title\"],\r\n            key: \"category\",\r\n        },\r\n    ];\r\n\r\n    const formFields = [\r\n        {\r\n            title: \"На русском\",\r\n            dataIndex: \"rusWord\",\r\n            key: \"rusWord\",\r\n            info: { type: \"input\" },\r\n            valueInForm: rusWordValueInForm,\r\n            onChangeValue: (e) => {\r\n                if (e.target) {\r\n                    setRusWordValueInForm(e.target.value);\r\n                } else {\r\n                    setRusWordValueInForm(e);\r\n                }\r\n            },\r\n            focus: true,\r\n        },\r\n        {\r\n            title: \"На английском\",\r\n            dataIndex: \"engWord\",\r\n            key: \"engWord\",\r\n            info: { type: \"input\" },\r\n            valueInForm: engWordValueInForm,\r\n            onChangeValue: (e) => {\r\n                if (e.target) {\r\n                    setEngWordValueInForm(e.target.value);\r\n                } else {\r\n                    setEngWordValueInForm(e);\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: \"Категория\",\r\n            dataIndex: \"category\",\r\n            key: \"category\",\r\n            info: { type: \"select\", items: categories },\r\n            valueInForm: categoryInForm,\r\n            onChangeValue: (v, categoryInfo) => {\r\n                if (categoryInfo) {\r\n                    setCategoryInForm(categoryInfo.key);\r\n                } else {\r\n                    setCategoryInForm(v);\r\n                }\r\n            },\r\n        },\r\n    ];\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addWord = () => {\r\n        dispatch(\r\n            wordsActions.fetchAddWord(\r\n                {\r\n                    engWord: formFields.filter((item) => item.key == \"engWord\")[0]\r\n                        .valueInForm,\r\n                    rusWord: formFields.filter((item) => item.key == \"rusWord\")[0]\r\n                        .valueInForm,\r\n                    category_id: formFields.filter((item) => item.key == \"category\")[0]\r\n                        .valueInForm,\r\n                },\r\n                user._id\r\n            )\r\n        );\r\n    };\r\n\r\n    const editWord = () => {\r\n        const getValue = (inputKey) => {\r\n            let value = \"\";\r\n            let field = formFields.filter((item) => item.key == inputKey)[0].valueInForm;\r\n            if (field[inputKey]) {\r\n                value = field[inputKey];\r\n            } else {\r\n                value = field;\r\n            }\r\n            return value;\r\n        };\r\n\r\n        dispatch(\r\n            wordsActions.fetchEditWord(\r\n                {\r\n                    engWord: getValue(\"engWord\"),\r\n                    rusWord: getValue(\"rusWord\"),\r\n                    category: getValue(\"category\"),\r\n                    _id: selectedWords[0],\r\n                },\r\n                selectedWords\r\n            )\r\n        );\r\n        setSelectedWords([]);\r\n    };\r\n\r\n    const deleteWords = () => {\r\n        dispatch(wordsActions.fetchDeleteWord(selectedWords));\r\n        setSelectedWords([]);\r\n    };\r\n\r\n    return (\r\n        <Content>\r\n            <DataTableControlPanel\r\n                onDelete={deleteWords}\r\n                items={words}\r\n                onAdd={addWord}\r\n                onEdit={editWord}\r\n                selectedItems={selectedWords}\r\n                formFields={formFields}\r\n            />\r\n            <DataTable\r\n                columns={columns}\r\n                isOpenItems={isOpenItemsRus || isOpenItemsEng}\r\n                data={words}\r\n                selectedItems={selectedWords}\r\n                setSelectedItems={setSelectedWords}\r\n            />\r\n        </Content>\r\n    );\r\n};\r\n\r\nexport default Words;\r\n","import React from \"react\";\r\n\r\nimport { Button as AntButton } from \"antd\";\r\nimport classnames from \"classnames\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nfunction Button({ icon, name, className, onClick, disabled }) {\r\n\r\n    return (\r\n        <AntButton\r\n            className={classnames(className, \"button_size\")}\r\n            type=\"primary\"\r\n            icon={icon}\r\n            onClick={onClick}\r\n            disabled={disabled}\r\n        >\r\n            {name}\r\n        </AntButton>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Form, Select, Button } from \"antd\";\r\n\r\nimport \"./Learn.scss\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction Learn() {\r\n    const categories = useSelector(({ categories }) => {\r\n        return [...categories.items, { _id: 0, title: \"Все\", key: 0 }] ;\r\n    });\r\n    return (\r\n        <div className=\"learn-form\">\r\n            <Form className=\"learn\">\r\n                <Form.Item className=\"learn__item\" label=\"Категории\" name=\"category\">\r\n                    <Select\r\n                        initialvalues={\"\"}\r\n                        showSearch\r\n                        style={{ width: 425 }}\r\n                        placeholder=\"\"\r\n                        optionFilterProp=\"item\"\r\n                        onChange={(e) => {\r\n                            console.log(e);\r\n                        }}\r\n                        filterOption={(input, option) => {\r\n                            return (\r\n                                option.children\r\n                                    .toLowerCase()\r\n                                    .indexOf(input.toLowerCase()) >= 0\r\n                            );\r\n                        }}\r\n                    >\r\n                        {categories.map((item) => {\r\n                            return (\r\n                                <Option key={item._id} value={item._id}>\r\n                                    {item.title}\r\n                                </Option>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item className=\"learn__item\">\r\n                    <Button type=\"primary\" className=\"learn__button\">\r\n                        Го учить\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Learn;\r\n","import React from \"react\";\r\n\r\nimport { Form, Input, Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction FormItem({ info, lable, defaultValue, onChange, focus }) {\r\n    return (\r\n        <Form.Item label={lable}>\r\n            {info.type == \"input\" ? (\r\n                <Input autoFocus={focus} defaultValue={defaultValue} onChange={onChange} />\r\n            ) : info.type == \"select\" ? (\r\n                <Select\r\n                    defaultValue={defaultValue && defaultValue.title}\r\n                    showSearch\r\n                    style={{ width: 395 }}\r\n                    placeholder=\"\"\r\n                    optionFilterProp=\"item\"\r\n                    onChange={onChange}\r\n                    filterOption={(input, option) => {\r\n                        return (\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                            0\r\n                        );\r\n                    }}\r\n                >\r\n                    {info.items.map((item) => {\r\n                        return (\r\n                            <Option key={item._id} value={item._id}>\r\n                                {item.title}\r\n                            </Option>\r\n                        );\r\n                    })}\r\n                </Select>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </Form.Item>\r\n    );\r\n}\r\n\r\nexport default FormItem;\r\n","import React from \"react\";\r\n\r\nimport { Form } from \"antd\";\r\n\r\nimport { Button } from \"../\";\r\nimport FormItem from \"./FormItem\";\r\n\r\nimport \"./Forms.scss\";\r\n\r\nfunction Forms({\r\n    overlayHidden,\r\n    setOverlayHidden,\r\n    formTypeInfo,\r\n    items,\r\n    selectedItems,\r\n    formFields,\r\n}) {\r\n    const getSelectedItem = (key) => {\r\n\r\n        return items.filter((item) => item._id === selectedItems[0])[0][key];\r\n    };\r\n    return (\r\n        <Form className=\"form\">\r\n            {formFields.map((field, index) => {\r\n                return (\r\n                    <FormItem\r\n                        key={index}\r\n                        info={field.info}\r\n                        lable={field.title}\r\n                        defaultValue={\r\n                            formTypeInfo.type === \"EDIT\" ? getSelectedItem(field.key) : \"\"\r\n                        }\r\n                        onChange={field.onChangeValue}\r\n                        focus={field.focus}\r\n                    />\r\n                );\r\n            })}\r\n\r\n            <Form.Item className=\"form__button\">\r\n                <Button\r\n                    className=\"form__save-button\"\r\n                    name={\"Сохранить\"}\r\n                    onClick={() => {\r\n                        formTypeInfo.update();\r\n                        setOverlayHidden(!overlayHidden);\r\n                    }}\r\n                    type=\"primary\"\r\n                />\r\n\r\n                <Button\r\n                    name={\"Отмена\"}\r\n                    onClick={() => {\r\n                        setOverlayHidden(!overlayHidden);\r\n                    }}\r\n                    type=\"primary\"\r\n                />\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Forms;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { PlusCircleOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { Button, Forms } from \"../\";\r\n\r\nfunction DataTableControlPanel({\r\n    onDelete,\r\n    items,\r\n    onAdd,\r\n    onEdit,\r\n    selectedItems,\r\n    formFields,\r\n}) {\r\n    const [overlayHidden, setOverlayHidden] = useState(true);\r\n    const [formType, setFormType] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={classnames(\"overlay\", { overlay_hide: overlayHidden })}\r\n                onClick={() => {\r\n                    setOverlayHidden(!overlayHidden);\r\n                }}\r\n            ></div>\r\n            {!overlayHidden && (\r\n                <Forms\r\n                    formFields={formFields}\r\n                    setOverlayHidden={setOverlayHidden}\r\n                    overlayHidden={overlayHidden}\r\n                    formTypeInfo={{\r\n                        type: formType,\r\n                        update: formType === \"EDIT\" ? onEdit : onAdd,\r\n                    }}\r\n                    items={items}\r\n                    selectedItems={selectedItems}\r\n                />\r\n            )}\r\n            <Button\r\n                className=\"words__add\"\r\n                name={\"Добавить\"}\r\n                icon={<PlusCircleOutlined />}\r\n                onClick={() => {\r\n                    setOverlayHidden(!overlayHidden);\r\n                    setFormType(\"ADD\");\r\n                }}\r\n            />\r\n            <Button\r\n                className=\"words__add\"\r\n                disabled={!(selectedItems.length === 1)}\r\n                name={\"Редактировать\"}\r\n                type=\"primary\"\r\n                icon={<EditOutlined />}\r\n                onClick={() => {\r\n                    setOverlayHidden(!overlayHidden);\r\n                    setFormType(\"EDIT\");\r\n                    formFields.forEach((element) => {\r\n                        element.onChangeValue(\r\n                            items.filter((item) => item._id === selectedItems[0])[0]\r\n                        );\r\n                    });\r\n                }}\r\n            />\r\n            <Button\r\n                disabled={!(selectedItems.length >= 1)}\r\n                className=\"words__add\"\r\n                name={\"Удалить\"}\r\n                type=\"primary\"\r\n                icon={<DeleteOutlined />}\r\n                onClick={onDelete}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataTableControlPanel;\r\n","import React from \"react\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { NavMenu, Words, Categories, Learn } from \"../../components\";\r\nimport { Auth, Registration } from \"../\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/auth\">\r\n                <Auth />\r\n            </Route>\r\n            <Route exact path=\"/registration\">\r\n                <Registration />\r\n            </Route>\r\n            <Layout className=\"layout\">\r\n                <NavMenu />\r\n                <Switch>\r\n                    <Route exact path=\"/categories\">\r\n                        <Categories />\r\n                    </Route>\r\n                    <Route exact path=\"/learn\">\r\n                        <Learn />\r\n                    </Route>\r\n\r\n                    <Route path={[\"/\", \"/words\"]}>\r\n                        <Words />\r\n                    </Route>\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport { userApi } from \"../../utils/api/index\";\r\nimport \"./Registration.scss\";\r\n\r\nfunction Registration() {\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n\r\n    return (\r\n        <Layout className=\"layout registration-layout\">\r\n            <Form className=\"registration\">\r\n                <Form.Item\r\n                    className=\"registration__item\"\r\n                    label=\"Имя пользователя\"\r\n                    name=\"username\"\r\n                >\r\n                    <Input\r\n                        className=\"registration__item_input\"\r\n                        onChange={(e) => {\r\n                            setUserName(e.target.value);\r\n                        }}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item className=\"registration__item\" label=\"E-mail\" name=\"email\">\r\n                    <Input\r\n                        className=\"registration__item_input\"\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value);\r\n                        }}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item className=\"registration__item\" label=\"Пароль\" name=\"password\">\r\n                    <Input.Password\r\n                        className=\"registration__item_input\"\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value);\r\n                        }}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    className=\"registration__item\"\r\n                    label=\"Повторите пароль\"\r\n                    name=\"password2\"\r\n                >\r\n                    <Input.Password\r\n                        className=\"registration__item_input\"\r\n                        onChange={(e) => {\r\n                            setRepeatPassword(e.target.value);\r\n                        }}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item className=\"registration__item\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        className=\"registration__button\"\r\n                        onClick={async () => {\r\n                            if (password === repeatPassword) {\r\n                                const user = await userApi.createUser({\r\n                                    user_name: userName,\r\n                                    email: email,\r\n                                    password: password,\r\n                                });\r\n\r\n                                console.log(\"Регистрация прошла успешно\", user.data);\r\n                            } else {\r\n                                console.log(\"Не совпадают пароли!\");\r\n                            }\r\n                        }}\r\n                    >\r\n                        {/* <Link to=\"/words\">Зарегистрироваться</Link> */}\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </Form.Item>\r\n                <Form.Item className=\"registration__item\">\r\n                    <Button type=\"primary\" className=\"registration__button\">\r\n                        <Link to=\"/auth\">Войти</Link>\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","import { notification } from \"antd\";\r\n\r\nfunction openNotification(type, title, description) {\r\n    return notification[type]({\r\n        message: title,\r\n        description: description,\r\n    });\r\n}\r\n\r\nexport default openNotification;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport { userActions } from \"../../redux/actions\";\r\nimport openNotification from \"../../utils/helpers/openNotification\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\nfunction Auth() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Layout className=\"layout auth-layout\">\r\n            <Form className=\"auth\">\r\n                <Form.Item className=\"auth__item\" label=\"Email\" name=\"email\">\r\n                    <Input\r\n                        className=\"auth__item_input\"\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value);\r\n                        }}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item className=\"auth__item\" label=\"Пароль\" name=\"password\">\r\n                    <Input.Password\r\n                        className=\"auth__item_input\"\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value);\r\n                        }}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item className=\"auth__item\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        className=\"auth__button\"\r\n                        onClick={() => {\r\n                            dispatch(\r\n                                userActions.fetchUserLogin({\r\n                                    email: email,\r\n                                    password: password,\r\n                                })\r\n                            ).then((info) => {\r\n                                if (info.message === \"Success\") {\r\n                                    openNotification('success', \"Акторизация прошла успешно!\")\r\n                                    setTimeout(() => {\r\n                                        // window.location.href = \"/\";\r\n                                    }, 1000);\r\n                                } else {\r\n                                    openNotification('error', \"Неверный логин или пароль!\")\r\n\r\n                                }\r\n                            });\r\n                        }}\r\n                    >\r\n                        {/* <Link to=\"/words\">Войти</Link> */}\r\n                        Войти\r\n                    </Button>\r\n                </Form.Item>\r\n                <Form.Item className=\"auth__item\">\r\n                    <Button type=\"primary\" className=\"auth__button\">\r\n                        <Link to=\"/registration\">На регистрацию</Link>\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Auth;\r\n","import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport { Home, Registration, Auth } from \"./pages\";\n\nimport \"./App.scss\";\n\nfunction App() {\n    const user = useSelector(({ user }) => {\n        return user;\n    });\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/registration\"\n                        render={() =>\n                            !user.isAuth ? <Registration /> : <Redirect to=\"/\" />\n                        }\n                    />\n\n                    <Route\n                        exact\n                        path=\"/auth\"\n                        render={() => (!user.isAuth ? <Auth /> : <Redirect to=\"/\" />)}\n                    />\n                    <Route\n                        exact\n                        path=\"/categories\"\n                        render={() => (user.isAuth ? <Home /> : <Redirect to=\"/auth\" />)}\n                    />\n\n                    <Route\n                        exact\n                        path=\"/learn\"\n                        render={() => (user.isAuth ? <Home /> : <Redirect to=\"/auth\" />)}\n                    />\n\n                    <Route\n                        path={[\"/\", \"/words\"]}\n                        render={() => (user.isAuth ? <Home /> : <Redirect to=\"/auth\" />)}\n                    />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"antd/dist/antd.css\";\n\nimport App from \"./App\";\nimport { userActions } from \"./redux/actions\";\n\nif (store.getState().user.isAuth) {\n    store.dispatch(userActions.fetchUserData());\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}